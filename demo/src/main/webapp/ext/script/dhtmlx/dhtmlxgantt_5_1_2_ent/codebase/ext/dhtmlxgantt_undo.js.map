{"version":3,"sources":["webpack:///dhtmlxgantt_undo.js","webpack:///webpack/bootstrap c4a39cba6e1e70e8474e","webpack:///./sources/ext/undo.js"],"names":["Gantt","plugin","gantt","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","35","36","config","undo_steps","undo","redo","this","_undo","getUndoStack","_undoStack","getRedoStack","_redoStack","undo_types","link","task","undo_actions","update","remove","add","maxSteps","undo_enabled","redo_enabled","_push","stack","action","commands","length","push","shift","_pop","pop","updateConfigs","callEvent","_applyAction","invert","copy","command","entities","entity","actions","type","methods","isExists","batchUpdate","method","check","oldValue","parent","$index","value","id","logAction","create","slice","revert","inverseCommands","load","clear","assert","monitor","_batchAction","_batchMode","_ignore","startIgnore","stopIgnore","startBatchAction","timeout","clearTimeout","setTimeout","stopBatchAction","_storeCommand","_storeEntityCommand","obj","old","actionType","entityType","_storeTaskCommand","getInitialTask","_storeLinkCommand","getInitialLink","onTaskAdded","onTaskUpdated","onTaskDeleted","_nestedTasks","children","_nestedLinks","childrenLinks","onLinkAdded","onLinkUpdated","onLinkDeleted","_initialTasks","_getLinks","$source","concat","$target","setNestedTasks","taskIds","tasks","linkIds","getTask","setInitialTask","uniqueLinks","links","setInitialLink","getTaskIndex","_initialLinks","getLink","store","updTask","oldId","newId","changeTaskCommandId","updLink","oldTaskId","newTaskId","source","target","changeLinkCommandId","updateTasksIds","log","entry","j","updateLinksIds","noTrack","onBeforeUndo","onBeforeRedo","attachEvent","batchActions","nested","eachTask"],"mappings":"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","file":"dhtmlxgantt_undo.js","sourcesContent":["/*!\n * @license\n * \n * dhtmlxGantt v.5.1.2 Professional\n * This software is covered by DHTMLX Enterprise License. Usage without proper license is prohibited.\n * \n * (c) Dinamenta, UAB.\n * \n */\nGantt.plugin(function(gantt){\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 35);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 35:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(36);\n\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, exports) {\n\ngantt.config.undo_steps = 10;\ngantt.config.undo = true;\ngantt.config.redo = true;\n\ngantt.undo = function(){\n\tthis._undo.undo();\n};\n\ngantt.getUndoStack = function(){\n\treturn this._undo._undoStack;\n};\n\ngantt.getRedoStack = function(){\n\treturn this._undo._redoStack;\n};\n\ngantt.redo = function(){\n\tthis._undo.redo();\n};\n\n/**\n * entities that require different processing for undoing-redoing changes\n * @type {{link: string, task: string}}\n */\ngantt.config.undo_types = {\n\tlink: \"link\",\n\ttask: \"task\"\n};\n\n/**\n * types of traced actions\n * @type {{update: string, remove: string, add: string}}\n */\ngantt.config.undo_actions = {\n\tupdate:\"update\",\n\tremove:\"remove\",// remove item from datastore\n\tadd:\"add\"\n};\n\ngantt._undo = {\n\t_undoStack:[],\n\t_redoStack:[],\n\tmaxSteps:10,\n\tundo_enabled: true,\n\tredo_enabled: true,\n\t_push: function(stack, action){\n\t\tif(!action.commands.length)\n\t\t\treturn;\n\n\n\t\tstack.push(action);\n\t\twhile(stack.length > this.maxSteps){\n\t\t\tstack.shift();\n\t\t}\n\t\treturn action;\n\t},\n\t_pop:function(stack){\n\t\treturn stack.pop();\n\t},\n\n\tundo:function(){\n\t\tthis.updateConfigs();\n\t\tif(!this.undo_enabled)\n\t\t\treturn;\n\n\t\tvar action = this._pop(this._undoStack);\n\t\tif(gantt.callEvent(\"onBeforeUndo\", [action]) !== false){\n\t\t\tif(action){\n\n\t\t\t\tthis._applyAction(this.action.invert(action));\n\t\t\t\tthis._push(this._redoStack, gantt.copy(action));\n\t\t\t}\n\t\t}\n\t\tgantt.callEvent(\"onAfterUndo\", []);\n\t},\n\n\tredo:function(){\n\t\tthis.updateConfigs();\n\t\tif(!this.redo_enabled)\n\t\t\treturn;\n\n\t\tvar action = this._pop(this._redoStack);\n\t\t\tif(gantt.callEvent(\"onBeforeRedo\", [action]) !== false){\n\t\t\t\tif(action){\n\t\t\t\t\tthis._applyAction(action);\n\t\t\t\t\tthis._push(this._undoStack, gantt.copy(action));\n\t\t\t\t}\n\t\t}\n\t\tgantt.callEvent(\"onAfterRedo\", []);\n\t},\n\n\t_applyAction:function(action){\n\t\tvar command = null,\n\t\t\tentities = this.command.entity,\n\t\t\tactions = this.command.type;\n\n\t\tvar methods = {};\n\t\tmethods[entities.task] = {\n\t\t\tadd: \"addTask\",\n\t\t\tupdate: \"updateTask\",\n\t\t\tremove: \"deleteTask\",\n\t\t\tisExists: \"isTaskExists\"\n\t\t};\n\t\tmethods[entities.link] = {\n\t\t\tadd: \"addLink\",\n\t\t\tupdate: \"updateLink\",\n\t\t\tremove: \"deleteLink\",\n\t\t\tisExists: \"isLinkExists\"\n\t\t};\n\n\t\tgantt.batchUpdate(function(){\n\t\t\tfor(var i = 0; i < action.commands.length; i++){\n\t\t\t\tcommand = action.commands[i];\n\t\t\t\tvar method = methods[command.entity][command.type],\n\t\t\t\t\tcheck = methods[command.entity][\"isExists\"];\n\n\t\t\t\tif(command.type == actions.add){\n\t\t\t\t\tgantt[method](command.oldValue, command.oldValue.parent, command.oldValue.$index);\n\t\t\t\t}else if(command.type == actions.remove){\n\t\t\t\t\tif(gantt[check](command.value.id))\n\t\t\t\t\t\tgantt[method](command.value.id);\n\t\t\t\t}else if(command.type == actions.update){\n\n\t\t\t\t\tgantt[method](command.value.id, command.value);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t//storeUndo:\n\tlogAction: function(action){\n\t\tthis._push(this._undoStack, action);\n\t\tthis._redoStack = [];\n\t},\n\n\taction: {\n\t\tcreate: function(commands){\n\t\t\treturn {commands: commands ? commands.slice() : []};\n\t\t},\n\t\tinvert: function(action){\n\t\t\tvar revert = gantt.copy(action);\n\t\t\tvar commands = gantt._undo.command;\n\n\t\t\tfor(var i = 0; i < action.commands.length; i++){\n\t\t\t\tvar command = revert.commands[i] = commands.invert(revert.commands[i]);\n\t\t\t\tif(command.type == commands.type.update){\n\t\t\t\t\tvar value = command.value;\n\t\t\t\t\tcommand.value = command.oldValue;\n\t\t\t\t\tcommand.oldValue = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn revert;\n\t\t}\n\t},\n\n\tcommand:{\n\t\tcreate: function(value, oldValue, type, entity){\n\t\t\treturn {\n\t\t\t\tentity:entity,\n\t\t\t\ttype:type,\n\t\t\t\tvalue:gantt.copy(value),\n\t\t\t\toldValue:gantt.copy(oldValue || value)\n\t\t\t};\n\t\t},\n\t\tinvert: function(command){\n\t\t\tvar revert = gantt.copy(command);\n\t\t\trevert.type = this.inverseCommands(command.type);\n\t\t\treturn revert;\n\t\t},\n\t\t// entities that require different processing for undoing-redoing changes\n\t\tentity:null,\n\n\t\t//types of traced actions\n\t\ttype:null,\n\t\tinverseCommands:function(command){\n\t\t\tswitch (command){\n\t\t\t\tcase this.type.update:\n\t\t\t\t\treturn this.type.update;\n\t\t\t\tcase this.type.remove:\n\t\t\t\t\treturn this.type.add;\n\t\t\t\tcase this.type.add:\n\t\t\t\t\treturn this.type.remove;\n\t\t\t\tcase this.type.load:\n\t\t\t\t\treturn this.type.clear;\n\t\t\t\tcase this.type.clear:\n\t\t\t\t\treturn this.type.load;\n\t\t\t\tdefault:\n\t\t\t\t\tgantt.assert(false, \"Invalid command \"+ command);\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\tmonitor: {\n\t\t_batchAction: null,\n\t\t_batchMode: false,\n\t\t_ignore: false,\n\t\tstartIgnore: function(){\n\t\t\tthis._ignore = true;\n\t\t},\n\t\tstopIgnore: function(){\n\t\t\tthis._ignore = false;\n\t\t},\n\t\tstartBatchAction : function(){\n\t\t\t// try catching updates made from event handlers using timeout\n\t\t\tif(this.timeout){\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t}\n\t\t\tthis.timeout = setTimeout(function(){\n\t\t\t\tgantt._undo.monitor.stopBatchAction();\n\t\t\t}, 10);\n\n\n\t\t\tif(this._ignore || this._batchMode)\n\t\t\t\treturn;\n\n\t\t\tthis._batchMode = true;\n\t\t\tthis._batchAction = gantt._undo.action.create();\n\t\t},\n\t\tstopBatchAction: function(){\n\t\t\tif(this._ignore)\n\t\t\t\treturn;\n\t\t\tvar undo = gantt._undo;\n\t\t\tif(this._batchAction){\n\t\t\t\tundo.logAction(this._batchAction);\n\t\t\t}\n\t\t\tthis._batchMode = false;\n\t\t\tthis._batchAction = null;\n\t\t},\n\n\t\t_storeCommand: function(command){\n\t\t\tvar undo = gantt._undo;\n\t\t\tundo.updateConfigs();\n\n\t\t\tif(!undo.undo_enabled)\n\t\t\t\treturn;\n\n\t\t\tif(this._batchMode){\n\t\t\t\tthis._batchAction.commands.push(command);\n\t\t\t}else{\n\t\t\t\tvar action = undo.action.create([command]);\n\t\t\t\tundo.logAction(action);\n\t\t\t}\n\t\t},\n\t\t_storeEntityCommand: function(obj, old, actionType, entityType){\n\t\t\tvar undo = gantt._undo;\n\t\t\tvar command = undo.command.create(obj, old, actionType, entityType);\n\t\t\tthis._storeCommand(command);\n\t\t},\n\t\t_storeTaskCommand: function(obj, type){\n\t\t\tthis._storeEntityCommand(obj, this.getInitialTask(obj.id), type, gantt._undo.command.entity.task);\n\t\t},\n\t\t_storeLinkCommand: function(obj, type){\n\t\t\tthis._storeEntityCommand(obj, this.getInitialLink(obj.id), type, gantt._undo.command.entity.link);\n\t\t},\n\n\n\t\tonTaskAdded:function(task){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.add);\n\t\t},\n\t\tonTaskUpdated:function(task){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.update);\n\t\t},\n\t\tonTaskDeleted: function(task){\n\t\t\tif(!this._ignore){\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.remove);\n\t\t\t\tif(this._nestedTasks[task.id]){\n\t\t\t\t\tvar children = this._nestedTasks[task.id];\n\t\t\t\t\tfor(var i = 0; i < children.length; i++){\n\t\t\t\t\t\tthis._storeTaskCommand(children[i], gantt._undo.command.type.remove);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._nestedLinks[task.id]){\n\t\t\t\t\tvar childrenLinks = this._nestedLinks[task.id];\n\t\t\t\t\tfor(var i = 0; i < childrenLinks.length; i++){\n\t\t\t\t\t\tthis._storeLinkCommand(childrenLinks[i], gantt._undo.command.type.remove);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonLinkAdded: function(link){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.add);\n\t\t},\n\t\tonLinkUpdated: function(link){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.update);\n\t\t},\n\t\tonLinkDeleted: function(link){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.remove);\n\t\t},\n\t\t_initialTasks:{},\n\t\t_nestedTasks:{},\n\t\t_nestedLinks:{},\n\t\t_getLinks: function(task){\n\t\t\treturn task.$source.concat(task.$target);\n\t\t},\n\t\tsetNestedTasks: function(id, taskIds){\n\t\t\tvar task = null,\n\t\t\t\ttasks = [],\n\t\t\t\tlinkIds = this._getLinks(gantt.getTask(id));\n\n\t\t\tfor(var i = 0; i < taskIds.length; i++){\n\t\t\t\ttask = this.setInitialTask(taskIds[i]);\n\n\t\t\t\tlinkIds = linkIds.concat(this._getLinks(task));\n\n\n\t\t\t\ttasks.push(task);\n\t\t\t}\n\n\t\t\tvar uniqueLinks = {};\n\t\t\tfor(var i = 0; i < linkIds.length; i++){\n\t\t\t\tuniqueLinks[linkIds[i]] = true;\n\t\t\t}\n\t\t\tvar links = [];\n\t\t\tfor(var i in uniqueLinks){\n\t\t\t\tlinks.push(this.setInitialLink(i));\n\t\t\t}\n\t\t\tthis._nestedTasks[id] = tasks;\n\t\t\tthis._nestedLinks[id] = links;\n\t\t},\n\t\tsetInitialTask: function(id){\n\t\t\tif(!this._initialTasks[id] || !this._batchMode){\n\t\t\t\tvar task = gantt.copy( gantt.getTask(id));\n\t\t\t\ttask.$index = gantt.getTaskIndex(id);\n\n\t\t\t\tthis._initialTasks[id] = task;\n\t\t\t}\n\t\t\treturn this._initialTasks[id];\n\t\t},\n\t\tgetInitialTask: function(id){\n\t\t\treturn this._initialTasks[id];\n\t\t},\n\n\t\t_initialLinks:{},\n\t\tsetInitialLink: function(id){\n\t\t\tif(!this._initialLinks[id] || !this._batchMode)\n\t\t\t\tthis._initialLinks[id] = gantt.copy(gantt.getLink(id));\n\n\t\t\treturn this._initialLinks[id];\n\t\t},\n\t\tgetInitialLink: function(id){\n\t\t\treturn this._initialLinks[id];\n\t\t}\n\t}\n\n\n};\ngantt._undo.updateConfigs = function(){\n\tgantt._undo.maxSteps = gantt.config.undo_steps;\n\tgantt._undo.command.entity = gantt.config.undo_types;\n\tgantt._undo.command.type = gantt.config.undo_actions;\n\tgantt._undo.undo_enabled = !!gantt.config.undo;\n\tgantt._undo.redo_enabled = (!!gantt.config.undo) && (!!gantt.config.redo);\n};\n\n\n(function(){\n\n\tvar monitor = gantt._undo.monitor;\n\n\tvar noTrack = {\n\t\t\"onBeforeUndo\":\"onAfterUndo\",\n\t\t\"onBeforeRedo\": \"onAfterRedo\"\n\t};\n\tfor(var i in noTrack){\n\t\tgantt.attachEvent(i, function(){\n\t\t\tmonitor.startIgnore();\n\t\t});\n\t\tgantt.attachEvent(noTrack[i], function(){\n\t\t\tmonitor.stopIgnore();\n\t\t});\n\t}\n\n\tvar batchActions = [\n\t\t\"onTaskDragStart\",\n\t\t\"onAfterTaskDelete\",\n\t\t\"onBeforeBatchUpdate\"\n\t];\n\n\tfor(var i  = 0; i < batchActions.length; i++){\n\t\tgantt.attachEvent(batchActions[i], function(){\n\t\t\tmonitor.startBatchAction();\n\t\t});\n\t}\n\tfunction store(id){\n\t\tmonitor.setInitialTask(id);\n\t\treturn true;\n\t}\n\n\n\n\tgantt.attachEvent(\"onBeforeTaskDrag\", store);\n\tgantt.attachEvent(\"onLightbox\", store);\n\tgantt.attachEvent(\"onBeforeTaskAutoSchedule\", function(task){ store(task.id);  return true;});\n\tgantt.attachEvent(\"onBeforeTaskDelete\", function(id){\n\t\tstore(id);\n\t\tvar nested = [];\n\t\tgantt.eachTask(function(task){\n\t\t\tnested.push(task.id);\n\t\t}, id);\n\t\tmonitor.setNestedTasks(id, nested);\n\t\treturn true;\n\t});\n\n\tgantt.attachEvent(\"onAfterTaskAdd\", function(id, task){\n\t\tmonitor.onTaskAdded(task);\n\t});\n\tgantt.attachEvent(\"onAfterTaskUpdate\", function(id, task){\n\t\tmonitor.onTaskUpdated(task);\n\t});\n\tgantt.attachEvent(\"onAfterTaskDelete\", function(id, task){\n\t\tmonitor.onTaskDeleted(task);\n\t});\n\n\tgantt.attachEvent(\"onAfterLinkAdd\", function(id, task){\n\t\tmonitor.onLinkAdded(task);\n\t});\n\tgantt.attachEvent(\"onAfterLinkUpdate\", function(id, task){\n\t\tmonitor.onLinkUpdated(task);\n\t});\n\tgantt.attachEvent(\"onAfterLinkDelete\", function(id, task){\n\t\tmonitor.onLinkDeleted(task);\n\t});\n\n\tfunction updTask(task, oldId, newId){\n\t\tif(!task) return;\n\n\t\tif(task.id == oldId){\n\t\t\ttask.id = newId;\n\t\t}\n\n\t\tif(task.parent == oldId){\n\t\t\ttask.parent = newId;\n\t\t}\n\t}\n\n\tfunction changeTaskCommandId(command, oldId, newId){\n\t\tupdTask(command.value, oldId, newId);\n\t\tupdTask(command.oldValue, oldId, newId);\n\t}\n\n\tfunction updLink(link, oldTaskId, newTaskId){\n\t\tif(!link) return;\n\t\tif(link.source == oldTaskId){\n\t\t\tlink.source = newTaskId;\n\t\t}\n\t\tif(link.target == oldTaskId){\n\t\t\tlink.target = newTaskId;\n\t\t}\n\t}\n\n\tfunction changeLinkCommandId(command, oldId, newId){\n\t\tupdLink(command.value, oldId, newId);\n\t\tupdLink(command.oldValue, oldId, newId);\n\t}\n\n\tfunction updateTasksIds(log, oldId, newId) {\n\t\tvar undo = gantt._undo;\n\n\t\tfor (var i = 0; i < log.length; i++) {\n\t\t\tvar entry = log[i];\n\t\t\tfor (var j = 0; j < entry.commands.length; j++) {\n\t\t\t\tif (entry.commands[j].entity == undo.command.entity.task) {\n\t\t\t\t\tchangeTaskCommandId(entry.commands[j], oldId, newId);\n\t\t\t\t} else if (entry.commands[j].entity == undo.command.entity.link) {\n\t\t\t\t\tchangeLinkCommandId(entry.commands[j], oldId, newId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateLinksIds(log, oldId, newId){\n\t\tvar undo = gantt._undo;\n\n\t\tfor (var i = 0; i < log.length; i++) {\n\t\t\tvar entry = log[i];\n\t\t\tfor (var j = 0; j < entry.commands.length; j++) {\n\t\t\t\tvar command = entry.commands[j];\n\t\t\t\tif (command.entity == undo.command.entity.link) {\n\t\t\t\t\tif(command.value && command.value.id == oldId){\n\t\t\t\t\t\tcommand.value.id = newId;\n\t\t\t\t\t}\n\t\t\t\t\tif(command.oldValue && command.oldValue.id == oldId){\n\t\t\t\t\t\tcommand.oldValue.id = newId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onTaskIdChange\", function(oldId, newId){\n\t\tvar undo = gantt._undo;\n\t\tupdateTasksIds(undo._undoStack,oldId, newId);\n\t\tupdateTasksIds(undo._redoStack,oldId, newId);\n\t});\n\tgantt.attachEvent(\"onLinkIdChange\", function(oldId, newId){\n\t\tvar undo = gantt._undo;\n\t\tupdateLinksIds(undo._undoStack,oldId, newId);\n\t\tupdateLinksIds(undo._redoStack,oldId, newId);\n\t});\n\tgantt.attachEvent(\"onGanttReady\", function(){\n\t\tgantt._undo.updateConfigs();\n\t});\n})();\n\n\n/***/ })\n\n/******/ });\n});\n\n\n// WEBPACK FOOTER //\n// dhtmlxgantt_undo.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c4a39cba6e1e70e8474e","gantt.config.undo_steps = 10;\ngantt.config.undo = true;\ngantt.config.redo = true;\n\ngantt.undo = function(){\n\tthis._undo.undo();\n};\n\ngantt.getUndoStack = function(){\n\treturn this._undo._undoStack;\n};\n\ngantt.getRedoStack = function(){\n\treturn this._undo._redoStack;\n};\n\ngantt.redo = function(){\n\tthis._undo.redo();\n};\n\n/**\n * entities that require different processing for undoing-redoing changes\n * @type {{link: string, task: string}}\n */\ngantt.config.undo_types = {\n\tlink: \"link\",\n\ttask: \"task\"\n};\n\n/**\n * types of traced actions\n * @type {{update: string, remove: string, add: string}}\n */\ngantt.config.undo_actions = {\n\tupdate:\"update\",\n\tremove:\"remove\",// remove item from datastore\n\tadd:\"add\"\n};\n\ngantt._undo = {\n\t_undoStack:[],\n\t_redoStack:[],\n\tmaxSteps:10,\n\tundo_enabled: true,\n\tredo_enabled: true,\n\t_push: function(stack, action){\n\t\tif(!action.commands.length)\n\t\t\treturn;\n\n\n\t\tstack.push(action);\n\t\twhile(stack.length > this.maxSteps){\n\t\t\tstack.shift();\n\t\t}\n\t\treturn action;\n\t},\n\t_pop:function(stack){\n\t\treturn stack.pop();\n\t},\n\n\tundo:function(){\n\t\tthis.updateConfigs();\n\t\tif(!this.undo_enabled)\n\t\t\treturn;\n\n\t\tvar action = this._pop(this._undoStack);\n\t\tif(gantt.callEvent(\"onBeforeUndo\", [action]) !== false){\n\t\t\tif(action){\n\n\t\t\t\tthis._applyAction(this.action.invert(action));\n\t\t\t\tthis._push(this._redoStack, gantt.copy(action));\n\t\t\t}\n\t\t}\n\t\tgantt.callEvent(\"onAfterUndo\", []);\n\t},\n\n\tredo:function(){\n\t\tthis.updateConfigs();\n\t\tif(!this.redo_enabled)\n\t\t\treturn;\n\n\t\tvar action = this._pop(this._redoStack);\n\t\t\tif(gantt.callEvent(\"onBeforeRedo\", [action]) !== false){\n\t\t\t\tif(action){\n\t\t\t\t\tthis._applyAction(action);\n\t\t\t\t\tthis._push(this._undoStack, gantt.copy(action));\n\t\t\t\t}\n\t\t}\n\t\tgantt.callEvent(\"onAfterRedo\", []);\n\t},\n\n\t_applyAction:function(action){\n\t\tvar command = null,\n\t\t\tentities = this.command.entity,\n\t\t\tactions = this.command.type;\n\n\t\tvar methods = {};\n\t\tmethods[entities.task] = {\n\t\t\tadd: \"addTask\",\n\t\t\tupdate: \"updateTask\",\n\t\t\tremove: \"deleteTask\",\n\t\t\tisExists: \"isTaskExists\"\n\t\t};\n\t\tmethods[entities.link] = {\n\t\t\tadd: \"addLink\",\n\t\t\tupdate: \"updateLink\",\n\t\t\tremove: \"deleteLink\",\n\t\t\tisExists: \"isLinkExists\"\n\t\t};\n\n\t\tgantt.batchUpdate(function(){\n\t\t\tfor(var i = 0; i < action.commands.length; i++){\n\t\t\t\tcommand = action.commands[i];\n\t\t\t\tvar method = methods[command.entity][command.type],\n\t\t\t\t\tcheck = methods[command.entity][\"isExists\"];\n\n\t\t\t\tif(command.type == actions.add){\n\t\t\t\t\tgantt[method](command.oldValue, command.oldValue.parent, command.oldValue.$index);\n\t\t\t\t}else if(command.type == actions.remove){\n\t\t\t\t\tif(gantt[check](command.value.id))\n\t\t\t\t\t\tgantt[method](command.value.id);\n\t\t\t\t}else if(command.type == actions.update){\n\n\t\t\t\t\tgantt[method](command.value.id, command.value);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t//storeUndo:\n\tlogAction: function(action){\n\t\tthis._push(this._undoStack, action);\n\t\tthis._redoStack = [];\n\t},\n\n\taction: {\n\t\tcreate: function(commands){\n\t\t\treturn {commands: commands ? commands.slice() : []};\n\t\t},\n\t\tinvert: function(action){\n\t\t\tvar revert = gantt.copy(action);\n\t\t\tvar commands = gantt._undo.command;\n\n\t\t\tfor(var i = 0; i < action.commands.length; i++){\n\t\t\t\tvar command = revert.commands[i] = commands.invert(revert.commands[i]);\n\t\t\t\tif(command.type == commands.type.update){\n\t\t\t\t\tvar value = command.value;\n\t\t\t\t\tcommand.value = command.oldValue;\n\t\t\t\t\tcommand.oldValue = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn revert;\n\t\t}\n\t},\n\n\tcommand:{\n\t\tcreate: function(value, oldValue, type, entity){\n\t\t\treturn {\n\t\t\t\tentity:entity,\n\t\t\t\ttype:type,\n\t\t\t\tvalue:gantt.copy(value),\n\t\t\t\toldValue:gantt.copy(oldValue || value)\n\t\t\t};\n\t\t},\n\t\tinvert: function(command){\n\t\t\tvar revert = gantt.copy(command);\n\t\t\trevert.type = this.inverseCommands(command.type);\n\t\t\treturn revert;\n\t\t},\n\t\t// entities that require different processing for undoing-redoing changes\n\t\tentity:null,\n\n\t\t//types of traced actions\n\t\ttype:null,\n\t\tinverseCommands:function(command){\n\t\t\tswitch (command){\n\t\t\t\tcase this.type.update:\n\t\t\t\t\treturn this.type.update;\n\t\t\t\tcase this.type.remove:\n\t\t\t\t\treturn this.type.add;\n\t\t\t\tcase this.type.add:\n\t\t\t\t\treturn this.type.remove;\n\t\t\t\tcase this.type.load:\n\t\t\t\t\treturn this.type.clear;\n\t\t\t\tcase this.type.clear:\n\t\t\t\t\treturn this.type.load;\n\t\t\t\tdefault:\n\t\t\t\t\tgantt.assert(false, \"Invalid command \"+ command);\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\tmonitor: {\n\t\t_batchAction: null,\n\t\t_batchMode: false,\n\t\t_ignore: false,\n\t\tstartIgnore: function(){\n\t\t\tthis._ignore = true;\n\t\t},\n\t\tstopIgnore: function(){\n\t\t\tthis._ignore = false;\n\t\t},\n\t\tstartBatchAction : function(){\n\t\t\t// try catching updates made from event handlers using timeout\n\t\t\tif(this.timeout){\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t}\n\t\t\tthis.timeout = setTimeout(function(){\n\t\t\t\tgantt._undo.monitor.stopBatchAction();\n\t\t\t}, 10);\n\n\n\t\t\tif(this._ignore || this._batchMode)\n\t\t\t\treturn;\n\n\t\t\tthis._batchMode = true;\n\t\t\tthis._batchAction = gantt._undo.action.create();\n\t\t},\n\t\tstopBatchAction: function(){\n\t\t\tif(this._ignore)\n\t\t\t\treturn;\n\t\t\tvar undo = gantt._undo;\n\t\t\tif(this._batchAction){\n\t\t\t\tundo.logAction(this._batchAction);\n\t\t\t}\n\t\t\tthis._batchMode = false;\n\t\t\tthis._batchAction = null;\n\t\t},\n\n\t\t_storeCommand: function(command){\n\t\t\tvar undo = gantt._undo;\n\t\t\tundo.updateConfigs();\n\n\t\t\tif(!undo.undo_enabled)\n\t\t\t\treturn;\n\n\t\t\tif(this._batchMode){\n\t\t\t\tthis._batchAction.commands.push(command);\n\t\t\t}else{\n\t\t\t\tvar action = undo.action.create([command]);\n\t\t\t\tundo.logAction(action);\n\t\t\t}\n\t\t},\n\t\t_storeEntityCommand: function(obj, old, actionType, entityType){\n\t\t\tvar undo = gantt._undo;\n\t\t\tvar command = undo.command.create(obj, old, actionType, entityType);\n\t\t\tthis._storeCommand(command);\n\t\t},\n\t\t_storeTaskCommand: function(obj, type){\n\t\t\tthis._storeEntityCommand(obj, this.getInitialTask(obj.id), type, gantt._undo.command.entity.task);\n\t\t},\n\t\t_storeLinkCommand: function(obj, type){\n\t\t\tthis._storeEntityCommand(obj, this.getInitialLink(obj.id), type, gantt._undo.command.entity.link);\n\t\t},\n\n\n\t\tonTaskAdded:function(task){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.add);\n\t\t},\n\t\tonTaskUpdated:function(task){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.update);\n\t\t},\n\t\tonTaskDeleted: function(task){\n\t\t\tif(!this._ignore){\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.remove);\n\t\t\t\tif(this._nestedTasks[task.id]){\n\t\t\t\t\tvar children = this._nestedTasks[task.id];\n\t\t\t\t\tfor(var i = 0; i < children.length; i++){\n\t\t\t\t\t\tthis._storeTaskCommand(children[i], gantt._undo.command.type.remove);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._nestedLinks[task.id]){\n\t\t\t\t\tvar childrenLinks = this._nestedLinks[task.id];\n\t\t\t\t\tfor(var i = 0; i < childrenLinks.length; i++){\n\t\t\t\t\t\tthis._storeLinkCommand(childrenLinks[i], gantt._undo.command.type.remove);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonLinkAdded: function(link){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.add);\n\t\t},\n\t\tonLinkUpdated: function(link){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.update);\n\t\t},\n\t\tonLinkDeleted: function(link){\n\t\t\tif(!this._ignore)\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.remove);\n\t\t},\n\t\t_initialTasks:{},\n\t\t_nestedTasks:{},\n\t\t_nestedLinks:{},\n\t\t_getLinks: function(task){\n\t\t\treturn task.$source.concat(task.$target);\n\t\t},\n\t\tsetNestedTasks: function(id, taskIds){\n\t\t\tvar task = null,\n\t\t\t\ttasks = [],\n\t\t\t\tlinkIds = this._getLinks(gantt.getTask(id));\n\n\t\t\tfor(var i = 0; i < taskIds.length; i++){\n\t\t\t\ttask = this.setInitialTask(taskIds[i]);\n\n\t\t\t\tlinkIds = linkIds.concat(this._getLinks(task));\n\n\n\t\t\t\ttasks.push(task);\n\t\t\t}\n\n\t\t\tvar uniqueLinks = {};\n\t\t\tfor(var i = 0; i < linkIds.length; i++){\n\t\t\t\tuniqueLinks[linkIds[i]] = true;\n\t\t\t}\n\t\t\tvar links = [];\n\t\t\tfor(var i in uniqueLinks){\n\t\t\t\tlinks.push(this.setInitialLink(i));\n\t\t\t}\n\t\t\tthis._nestedTasks[id] = tasks;\n\t\t\tthis._nestedLinks[id] = links;\n\t\t},\n\t\tsetInitialTask: function(id){\n\t\t\tif(!this._initialTasks[id] || !this._batchMode){\n\t\t\t\tvar task = gantt.copy( gantt.getTask(id));\n\t\t\t\ttask.$index = gantt.getTaskIndex(id);\n\n\t\t\t\tthis._initialTasks[id] = task;\n\t\t\t}\n\t\t\treturn this._initialTasks[id];\n\t\t},\n\t\tgetInitialTask: function(id){\n\t\t\treturn this._initialTasks[id];\n\t\t},\n\n\t\t_initialLinks:{},\n\t\tsetInitialLink: function(id){\n\t\t\tif(!this._initialLinks[id] || !this._batchMode)\n\t\t\t\tthis._initialLinks[id] = gantt.copy(gantt.getLink(id));\n\n\t\t\treturn this._initialLinks[id];\n\t\t},\n\t\tgetInitialLink: function(id){\n\t\t\treturn this._initialLinks[id];\n\t\t}\n\t}\n\n\n};\ngantt._undo.updateConfigs = function(){\n\tgantt._undo.maxSteps = gantt.config.undo_steps;\n\tgantt._undo.command.entity = gantt.config.undo_types;\n\tgantt._undo.command.type = gantt.config.undo_actions;\n\tgantt._undo.undo_enabled = !!gantt.config.undo;\n\tgantt._undo.redo_enabled = (!!gantt.config.undo) && (!!gantt.config.redo);\n};\n\n\n(function(){\n\n\tvar monitor = gantt._undo.monitor;\n\n\tvar noTrack = {\n\t\t\"onBeforeUndo\":\"onAfterUndo\",\n\t\t\"onBeforeRedo\": \"onAfterRedo\"\n\t};\n\tfor(var i in noTrack){\n\t\tgantt.attachEvent(i, function(){\n\t\t\tmonitor.startIgnore();\n\t\t});\n\t\tgantt.attachEvent(noTrack[i], function(){\n\t\t\tmonitor.stopIgnore();\n\t\t});\n\t}\n\n\tvar batchActions = [\n\t\t\"onTaskDragStart\",\n\t\t\"onAfterTaskDelete\",\n\t\t\"onBeforeBatchUpdate\"\n\t];\n\n\tfor(var i  = 0; i < batchActions.length; i++){\n\t\tgantt.attachEvent(batchActions[i], function(){\n\t\t\tmonitor.startBatchAction();\n\t\t});\n\t}\n\tfunction store(id){\n\t\tmonitor.setInitialTask(id);\n\t\treturn true;\n\t}\n\n\n\n\tgantt.attachEvent(\"onBeforeTaskDrag\", store);\n\tgantt.attachEvent(\"onLightbox\", store);\n\tgantt.attachEvent(\"onBeforeTaskAutoSchedule\", function(task){ store(task.id);  return true;});\n\tgantt.attachEvent(\"onBeforeTaskDelete\", function(id){\n\t\tstore(id);\n\t\tvar nested = [];\n\t\tgantt.eachTask(function(task){\n\t\t\tnested.push(task.id);\n\t\t}, id);\n\t\tmonitor.setNestedTasks(id, nested);\n\t\treturn true;\n\t});\n\n\tgantt.attachEvent(\"onAfterTaskAdd\", function(id, task){\n\t\tmonitor.onTaskAdded(task);\n\t});\n\tgantt.attachEvent(\"onAfterTaskUpdate\", function(id, task){\n\t\tmonitor.onTaskUpdated(task);\n\t});\n\tgantt.attachEvent(\"onAfterTaskDelete\", function(id, task){\n\t\tmonitor.onTaskDeleted(task);\n\t});\n\n\tgantt.attachEvent(\"onAfterLinkAdd\", function(id, task){\n\t\tmonitor.onLinkAdded(task);\n\t});\n\tgantt.attachEvent(\"onAfterLinkUpdate\", function(id, task){\n\t\tmonitor.onLinkUpdated(task);\n\t});\n\tgantt.attachEvent(\"onAfterLinkDelete\", function(id, task){\n\t\tmonitor.onLinkDeleted(task);\n\t});\n\n\tfunction updTask(task, oldId, newId){\n\t\tif(!task) return;\n\n\t\tif(task.id == oldId){\n\t\t\ttask.id = newId;\n\t\t}\n\n\t\tif(task.parent == oldId){\n\t\t\ttask.parent = newId;\n\t\t}\n\t}\n\n\tfunction changeTaskCommandId(command, oldId, newId){\n\t\tupdTask(command.value, oldId, newId);\n\t\tupdTask(command.oldValue, oldId, newId);\n\t}\n\n\tfunction updLink(link, oldTaskId, newTaskId){\n\t\tif(!link) return;\n\t\tif(link.source == oldTaskId){\n\t\t\tlink.source = newTaskId;\n\t\t}\n\t\tif(link.target == oldTaskId){\n\t\t\tlink.target = newTaskId;\n\t\t}\n\t}\n\n\tfunction changeLinkCommandId(command, oldId, newId){\n\t\tupdLink(command.value, oldId, newId);\n\t\tupdLink(command.oldValue, oldId, newId);\n\t}\n\n\tfunction updateTasksIds(log, oldId, newId) {\n\t\tvar undo = gantt._undo;\n\n\t\tfor (var i = 0; i < log.length; i++) {\n\t\t\tvar entry = log[i];\n\t\t\tfor (var j = 0; j < entry.commands.length; j++) {\n\t\t\t\tif (entry.commands[j].entity == undo.command.entity.task) {\n\t\t\t\t\tchangeTaskCommandId(entry.commands[j], oldId, newId);\n\t\t\t\t} else if (entry.commands[j].entity == undo.command.entity.link) {\n\t\t\t\t\tchangeLinkCommandId(entry.commands[j], oldId, newId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateLinksIds(log, oldId, newId){\n\t\tvar undo = gantt._undo;\n\n\t\tfor (var i = 0; i < log.length; i++) {\n\t\t\tvar entry = log[i];\n\t\t\tfor (var j = 0; j < entry.commands.length; j++) {\n\t\t\t\tvar command = entry.commands[j];\n\t\t\t\tif (command.entity == undo.command.entity.link) {\n\t\t\t\t\tif(command.value && command.value.id == oldId){\n\t\t\t\t\t\tcommand.value.id = newId;\n\t\t\t\t\t}\n\t\t\t\t\tif(command.oldValue && command.oldValue.id == oldId){\n\t\t\t\t\t\tcommand.oldValue.id = newId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onTaskIdChange\", function(oldId, newId){\n\t\tvar undo = gantt._undo;\n\t\tupdateTasksIds(undo._undoStack,oldId, newId);\n\t\tupdateTasksIds(undo._redoStack,oldId, newId);\n\t});\n\tgantt.attachEvent(\"onLinkIdChange\", function(oldId, newId){\n\t\tvar undo = gantt._undo;\n\t\tupdateLinksIds(undo._undoStack,oldId, newId);\n\t\tupdateLinksIds(undo._redoStack,oldId, newId);\n\t});\n\tgantt.attachEvent(\"onGanttReady\", function(){\n\t\tgantt._undo.updateConfigs();\n\t});\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sources/ext/undo.js\n// module id = 36\n// module chunks = 4"],"sourceRoot":""}