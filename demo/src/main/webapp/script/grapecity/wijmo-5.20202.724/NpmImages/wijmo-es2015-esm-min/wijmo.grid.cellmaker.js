/*!
    *
    * Wijmo Library 5.20202.724
    * http://wijmo.com/
    *
    * Copyright(c) GrapeCity, Inc.  All rights reserved.
    *
    * Licensed under the GrapeCity Commercial License.
    * sales@wijmo.com
    * wijmo.com/products/wijmo-5/license/
    *
    */

import{createElement,format,evalTemplate,toggleClass,isFunction,isNumber,isArray,isBoolean,_registerModule}from"wijmo/wijmo";import{DataMap,DataMapEditor}from"wijmo/wijmo.grid";import*as selfModule from"wijmo/wijmo.grid.cellmaker";export var SparklineType;!function(e){e[e.Line=0]="Line";e[e.Column=1]="Column";e[e.WinLoss=2]="WinLoss"}(SparklineType||(SparklineType={}));export var SparklineMarkers;!function(e){e[e.None=0]="None";e[e.First=1]="First";e[e.Last=2]="Last";e[e.High=4]="High";e[e.Low=8]="Low";e[e.Negative=16]="Negative"}(SparklineMarkers||(SparklineMarkers={}));export class CellMaker{static makeButton(e){return(t,l)=>{t.col.isReadOnly=!0;l.innerHTML="";let a=format('<button type="button">{txt}</button>',{txt:CellMaker._getOptionText(e,"text",t,t.text)});CellMaker._createElement(l,a,e,t);return null}}static makeLink(e){return(t,l)=>{t.col.isReadOnly=!0;l.innerHTML="";let a=format('<a href="{href}">{txt}</a>',{txt:CellMaker._getOptionText(e,"text",t,t.text),href:CellMaker._getOptionText(e,"href",t,"#")});CellMaker._createElement(l,a,e,t);return null}}static makeSparkline(e){return(t,l)=>{t.col.isReadOnly=!0;l.innerHTML="";let a=format("<div><svg><g>{spark}</g></svg></div>",{spark:CellMaker._getSparkline(t.value,e)});CellMaker._createElement(l,a,e,t);return null}}static makeImage(e){return(t,l)=>{t.col.isReadOnly=!0;l.innerHTML="";let a=format('<img src="{src}"></div>',{src:CellMaker._getOptionText(e,"src",t,t.text)});CellMaker._createElement(l,a,e,t);return null}}static makeRating(e){return(t,l)=>{let a=t.col,r=DataMapEditor,i=a.cssClass||"",n=CellMaker._WJC_CellMaker;if(!a.dataMap||a.dataMapEditor!=r.RadioButtons||i.indexOf(n)<0){let t=e?e.range:null,l=[];for(let e=(t=t&&isArray(t)&&t.length>1&&t[1]>t[0]?t:[0,5])[0];e<=t[1];e++)l.push(e);a.dataMap=new DataMap(l);a.dataMapEditor=r.RadioButtons;i.indexOf(n)<0&&(a.cssClass=(i+" "+n).trim())}if(e&&e.label){let a=CellMaker._getOptionText(e,"label",t);l.setAttribute("aria-label",a.trim())}let s=l.querySelectorAll("label"),o=!!e&&e.showZeros,u=null==l.querySelector("input:checked");for(let e=0;e<s.length;e++){let t=s[e];toggleClass(t,"wj-chk-hidden","0"==t.textContent&&!o);toggleClass(t,"wj-chk-off",u);u=u||null!=t.querySelector("input:checked")}return null}}static _getOptionText(e,t,l,a=""){let r=e?e[t]:"";return r?evalTemplate(r,l):a}static _createElement(e,t,l,a){let r=createElement(t,e),i=CellMaker._WJC_CellMaker;l&&l.cssClass&&(i+=" "+CellMaker._getOptionText(l,"cssClass",a));r.className=i.trim();if(l&&l.label){let e=CellMaker._getOptionText(l,"label",a);r.setAttribute("aria-label",e.trim());r instanceof HTMLImageElement&&r.setAttribute("alt",e.trim())}if(l&&l.attributes)for(let e in l.attributes)r.setAttribute(e,l.attributes[e]);l&&isFunction(l.click)&&(r.onclick=CellMaker._handleClick.bind({options:l,ctx:CellMaker._cloneContext(a)}));return r}static _cloneContext(e){if(isFunction(Object.assign))return Object.assign({},e);let t={};for(let l in e)t[l]=e[l];return t}static _handleClick(e){let t=this.options;if(isFunction(t.click)){e.preventDefault();let l=this.ctx;t.click(e,l)}}static _getSparkline(e,t){let l="",a=SparklineType,r=SparklineMarkers,i=null!=(t=t||{}).type?t.type:a.Line,n=null!=t.markers?t.markers:r.None,s=isNumber(t.baseValue)?t.baseValue:i==a.Line?null:0,o=isNumber(t.maxPoints)?t.maxPoints:null;if(e instanceof Array&&e.length>1){i==a.WinLoss&&(e=e.map(e=>isBoolean(e)?e?1:-1:isNumber(e)?e>0?1:e<0?-1:null:null));let t=CellMaker._scaleValues(e,s,o),r=t.points,u=t.base,c=100/(r.length-(i==a.Line?1:0)),m=c>4?c-2:c,k=c-m;switch(i){case a.Column:case a.WinLoss:for(let e=0;e<r.length;e++){let a=r[e];null!=a&&(l+=format("<rect {cls}x={x}% y={y}% width={w}% height={h}% />",{x:(e*c+k).toFixed(2),y:Math.min(u,a),w:m.toFixed(2),h:Math.abs(u-a),cls:CellMaker._getMarkers(n,t,e)}))}break;case a.Line:for(let e=0;e<r.length-1;e++){let a=r[e],i=r[e+1];null!=a&&null!=i&&(l+=format("<line x1={x1}% y1={y1}% x2={x2}% y2={y2}% />",{x1:Math.round(c*e),y1:a,x2:Math.round(c*(e+1)),y2:i}));let s=CellMaker._getMarkers(n,t,e),o='<circle {cls}cx={x}% cy={y}% r="3"/>';s&&(l+=format(o,{x:Math.round(c*e),y:a,cls:s}));e==r.length-2&&(s=CellMaker._getMarkers(n,t,e+1))&&(l+=format(o,{x:Math.round(c*(e+1)),y:i,cls:s}))}}null!=s&&i!=a.WinLoss&&(l+=format('<line class="x-axis" x1=0% y1={base}% x2=100% y2={base}% />',{base:t.base}))}return l}static _scaleValues(e,t,l){let a,r,i=[];l&&l>1&&e.length>l&&(e=e.slice(0,l));e.forEach(e=>{if(isNumber(e)){a=!isNumber(a)||e<a?e:a;r=!isNumber(r)||e>r?e:r}});if(isNumber(a)&&isNumber(r)){if(null!=t){a=Math.min(a,t);r=Math.max(r,t)}else t=a>0?a:r<0?r:0;if(a==r){a--;r++}let l=r-a;e.forEach(e=>{i.push(isNumber(e)?100-Math.round((e-a)/l*100):null)});t=100-Math.round((t-a)/l*100)}return{min:a,max:r,base:t,points:i,data:e}}static _getMarkers(e,t,l){let a="",r=SparklineMarkers;if(e){let i=t.data,n="wj-marker-";0!=(e&r.First)&&0==l&&(a+=n+"first ");0!=(e&r.Last)&&l==i.length-1&&(a+=n+"last ");0!=(e&r.High)&&i[l]==t.max&&(a+=n+"high ");0!=(e&r.Low)&&i[l]==t.min&&(a+=n+"low ");0!=(e&r.Negative)&&i[l]<0&&(a+=n+"negative ")}return a?'class="wj-marker '+a.trim()+'"':""}}CellMaker._WJC_CellMaker="wj-cell-maker";_registerModule("wijmo.grid.cellmaker",selfModule);