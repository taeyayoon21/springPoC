/*!
    *
    * Wijmo Library 5.20202.724
    * http://wijmo.com/
    *
    * Copyright(c) GrapeCity, Inc.  All rights reserved.
    *
    * Licensed under the GrapeCity Commercial License.
    * sales@wijmo.com
    * wijmo.com/products/wijmo-5/license/
    *
    */

import{assert,isArray,isString,isNumber,isUndefined,asBoolean,getTypes,getType,tryCast,toHeaderCase,addClass,DataType,Binding,Control,CollectionView,ObservableArray,NotifyCollectionChangedEventArgs,NotifyCollectionChangedAction,_registerModule}from"wijmo/wijmo";import{FlexGrid,Row,Column,ColumnCollection,AllowSorting,HeadersVisibility}from"wijmo/wijmo.grid";import*as selfModule from"wijmo/wijmo.grid.transposed";export class TransposedGrid extends FlexGrid{constructor(e,t){super(e,null);this._keyPrefix="item";this._autoGenRows=!0;addClass(this.hostElement,"wj-transposed-grid");this.allowSorting=AllowSorting.None;this.headersVisibility=HeadersVisibility.Row;this._rowInfo=new ColumnCollection(this,this.columns.defaultSize);this.initialize(t);this._rowInfo.collectionChanged.addHandler(this._rowInfoChanged,this);this.deferUpdate(()=>{let e=this.rowHeaders.columns;if(e.length){e[e.length-1].width=this.columns.defaultSize}})}get autoGenerateRows(){return this._autoGenRows}set autoGenerateRows(e){this._autoGenRows=asBoolean(e)}refresh(e){let t=this._rowInfo;if(t._dirty){t._dirty=!1;this._rowInfoChanged()}else super.refresh(e)}get allowAddNew(){return!1}set allowAddNew(e){}get allowDelete(){return!1}set allowDelete(e){}onRowEditEnded(e){if(null!=this._view){let e=new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change);this._view.collectionChanged.raise(this._view,e)}super.onRowEditEnded(e)}_getCollectionView(e){let t=null;null!=this._view&&this._view.collectionChanged.removeHandler(this._sourceViewChanged);if(isArray(e))e=this._transposeItemsSource(e);else if(e){this._view&&this._view.collectionChanged.removeHandler(this._sourceViewChanged);this._view=tryCast(e,"ICollectionView");if(this._view){this._view.collectionChanged.addHandler(this._sourceViewChanged,this);e instanceof CollectionView&&(t=e.getError);e=this._transposeItemsSource(this._view.items)}}this.autoGenerateColumns=!0;let i=super._getCollectionView(e);t&&i instanceof CollectionView&&(this._supportsProxies()?i.getError=(e,i)=>{let o=e._keys.indexOf(i);return t(e._arr[o],e._bnd.path)}:i.getError=(e,i)=>{let o=parseInt(i.substr(this._keyPrefix.length));return t(e._arr[o],e._rowInfo.binding)});return i}_getColumnTypes(e){if(this._view){let e=this._view.items;if(isArray(e))return e.map((e,t)=>({binding:this._keyPrefix+t,dataType:DataType.Object}))}return getTypes(e)}_copy(e,t){if(/rows|columns/.test(e)){assert(isArray(t),"Array Expected.");this._rowInfo.deferUpdate(()=>{this.autoGenerateRows=!1;this._rowInfo.clear();t.forEach(e=>{let t=new Column(e);this._rowInfo.push(t)})});return!0}return super._copy(e,t)}onLoadedRows(e){let t=this.rowHeaders.columns;for(let e=0;e<t.length;e++)t[e].align="left";let i=this.columns;for(let e=0;e<i.length;e++){let t=i[e];t.align=null;t.dataType=0}let o=FlexGrid._getSerializableProperties(Row);this.rows.forEach(e=>{let i=e.dataItem._rowInfo;if(i){this._copyProps(i,e,o,"showDropDown");if(t.length){let o=i.header||toHeaderCase(i.binding);this.rowHeaders.setCellData(e.index,t.length-1,o)}}});super.onLoadedRows(e)}_getBindingColumn(e,t,i){let o=i;if(e!=this.cells)return o;let n=e.rows[t].dataItem._rowInfo;if(isUndefined(n))return o;o=new Column;let r=FlexGrid._getSerializableProperties(Column);this._copyProps(n,o,r);o.binding=i.binding;o.header=n.header||toHeaderCase(n.binding);return o}_copyProps(e,t,i,o=""){for(let n in e)if(i.indexOf(n)>-1&&n!=o){let i=e[n];if(!isUndefined(i))try{t[n]=i}catch(e){}}}_rowInfoChanged(){this._toRowInfo&&clearTimeout(this._toRowInfo);this._toRowInfo=setTimeout(()=>{let e=this.selection,t=this.itemsSource;this.itemsSource=null;this.itemsSource=t;this.selection=e},Control._REFRESH_INTERVAL)}_sourceViewChanged(e,t){this.activeEditor||this.invalidate()}_transposeItemsSource(e){let t=new ObservableArray,i=getTypes(e),o=e.map((e,t)=>this._keyPrefix+t);(this.autoGenerateRows?this._getRowInfo(e):this._rowInfo).forEach((n,r)=>{let s=new Binding(n.binding);if(null==n.dataType){let t=s.getValue(e[0]);n.dataType=null!=t?getType(t):i[r].dataType}if(this._supportsProxies()){let i=this._createProxy(e,n,o);t.push(i)}else{let i=this._createTransposedObject(e,n,this._keyPrefix);t.push(i)}});e instanceof ObservableArray&&e.collectionChanged.addHandler(()=>{let e=new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset);t.onCollectionChanged(e);this._rowInfoChanged()});return t}_supportsProxies(){return null!=window.Proxy}_createProxy(e,t,i){let o={_arr:e,_rowInfo:t,_bnd:new Binding(t.binding),_keys:i};return new Proxy(o,{ownKeys:e=>e._keys,getOwnPropertyDescriptor:()=>({enumerable:!0,configurable:!0,writable:!0}),get:(e,t)=>{let i=e._keys.indexOf(t);return i>-1?e._bnd.getValue(e._arr[i]):e[t]},set:(e,t,i)=>{let o=e._keys.indexOf(t);if(o>-1){let t=e._arr,n=t[o];e._bnd.setValue(n,i);if(t instanceof ObservableArray){let e=new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change,n,o);t.onCollectionChanged(e)}return!0}return!1}})}_createTransposedObject(e,t,i){let o={_arr:e,_rowInfo:t},n=new Binding(t.binding);for(let t=0;t<e.length;t++){let r=e[t];Object.defineProperty(o,i+t,{enumerable:!0,get:()=>n.getValue(r),set:i=>{n.setValue(r,i);if(e instanceof ObservableArray){let i=new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change,r,t);e.onCollectionChanged(i)}return!0}})}return o}_getRowInfo(e){let t=[];getTypes(e).forEach(e=>{let i=e.binding,o=e.dataType;if(o!=DataType.Object&&o!=DataType.Array){let e={binding:i,header:toHeaderCase(i),dataType:o},n=FlexGrid._defTypeWidth[o];if(null!=n){if(isString(n)){let e=Math.round(parseFloat(n));n=n.indexOf("*")<0?e:e*this.columns.defaultSize}isNumber(n)&&n>0&&(e.width=n)}t.push(e)}});return t}}export class TransposedGridRow extends Column{}_registerModule("wijmo.grid.transposed",selfModule);